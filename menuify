#!/bin/bash

RED="\e[31m"
GREEN="\e[32m"
NORMAL="\e[0m"

print_choice() {
    color="${RED}"
    icon=" "
    [ "${selected_choices[$1]}" = "1" ] && color="${GREEN}" && icon="*"
    [ "${no_color}" = "1" ] && color="" && NORMAL=""

    printf "${icon} ${1}) ${color}" 1>&2

    # Print choice text literally
    printf "%s" "${choices[$1]}" 1>&2

    printf "${NORMAL}\n" 1>&2
}

print_menu() {
    [ "$no_clear" = "0" ] && printf "\033c" 1>&2

    i=0
    for choice in "${choices[@]}"; do
        print_choice "$i"
        ((i++))
    done

    printf "\nEnter selection:\n" 1>&2
}

toggle_choice() {
    if [ "${selected_choices[$1]}" = "1" ]; then
        selected_choices[$1]="0"
    else
        selected_choices[$1]="1"
    fi
}

print_result() {
    i=0
    for choice in "${choices[@]}"; do
        if [ "${selected_choices[$i]}" = "1" ]; then
            if [ "${quote}" = 1 ]; then
                printf "%s\n" "\"${choices[$i]}\""
            else
                printf "%s\n" "${choices[$i]}"
            fi
        fi
        ((i++))
    done
}

print_help() {
    printf "
Usage: menuify [OPTIONS]\n
Create interactive text-based menus\n
Menu choices are read in from STDIN. The selected choice(s) are printed to STDOUT.\n
Additional options
  --no-clear      don't clear terminal screen
  --no-color      don't output color codes
  --quote         surround result with quotes\n" 1>&2
    exit 0
}

# Menuify Options
no_clear=0
no_color=0
multi_select=0
quote=0

# Parse arguments
while [ $# -gt 0 ]; do
    if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
        print_help
    elif [ "$1" = "--multi" ]; then
        multi_select=1
    elif [ "$1" = "--no-clear" ]; then
        no_clear=1
    elif [ "$1" = "--no-color" ]; then
        no_color=1
    elif [ "$1" = "--quote" ]; then
        quote=0
    fi

    shift
done

choices=()
selected_choices=()

# Load options from stdin
while IFS='$\n' read -r line; do
    choices+=( "${line}" )
    selected_choices+=( 0 )
done

# Print help if choices are empty
[ "${#choices[@]}" = "0" ] && print_help

# Reset stdin
exec 6<&0
exec 0</dev/tty

while true; do
    print_menu

    read -s -n 1 response

    if [ "$response" = "" ]; then
        break
    fi

    toggle_choice "$response"

    if [ "$multi_select" != "1" ]; then
        break
    fi
done

print_result
