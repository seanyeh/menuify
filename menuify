#!/bin/bash

RED="\e[31m"
GREEN="\e[32m"
NORMAL="\e[0m"

print_choice() {
    color="${RED}"
    if [ "${selected_choices[$1]}" = "1" ]; then
        color="${GREEN}"
    fi

    printf "${1}) ${color}${choices[$1]}${NORMAL}\n" 1>&2
}

print_menu() {
    [ "$no_clear" = "0" ] && printf "\033c" 1>&2

    i=0
    for choice in "${choices[@]}"; do
        print_choice "$i"
        ((i++))
    done

    printf "\nEnter selection:\n" 1>&2
}

toggle_choice() {
    if [ "${selected_choices[$1]}" = "1" ]; then
        selected_choices[$1]="0"
    else
        selected_choices[$1]="1"
    fi
}

print_result() {
    i=0
    for choice in "${choices[@]}"; do
        if [ "${selected_choices[$i]}" = "1" ]; then
            printf "\"${choices[$i]}\""
        fi
        ((i++))
    done
}

print_help() {
    echo "placeholder"
    exit 0
}

choices=()
selected_choices=()

# Load options from stdin
while IFS='$\n' read -r line; do
    choices+=( "${line}" )
    selected_choices+=( 0 )
done

# Reset stdin
exec 6<&0
exec 0</dev/tty

# Menuify Options
no_clear=0
no_color=0
multi_select=0
confirm=0

# Parse arguments
while [ $# -gt 0 ]; do
    if [ "$1" = "--help" ]; then
        print_help
    elif [ "$1" = "--multi" ]; then
        multi_select=1
    elif [ "$1" = "--no-clear" ]; then
        no_clear=1
    elif [ "$1" = "--no-color" ]; then
        no_color=1
    fi

    shift
done

if [ "${#choices[@]}" = "0" ]; then
    print_help
fi

while true; do
    print_menu

    read -s -n 1 response

    if [ "$response" = "" ]; then
        break
    fi

    toggle_choice "$response"

    if [ "$multi_select" != "1" ]; then
        break
    fi
done

print_result
